{"ast":null,"code":"var _jsxFileName = \"/Users/aleimberg/Study/dapp_chat_material_ui/src/components/ChatUI.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, TextField, Button, Typography, Grid, Paper } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = [{\n  id: 1,\n  text: \"Hi there!\",\n  sender: \"bot\"\n}, {\n  id: 2,\n  text: \"Hello!\",\n  sender: \"user\"\n}, {\n  id: 3,\n  text: \"How can I assist you today?\",\n  sender: \"bot\"\n}];\nconst ChatUI = () => {\n  _s();\n  const [input, setInput] = React.useState(\"\");\n  const handleSend = () => {\n    if (input.trim() !== \"\") {\n      console.log(input);\n      setInput(\"\");\n    }\n  };\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"50vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      bgcolor: \"grey.200\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflow: \"auto\",\n        p: 2\n      },\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        backgroundColor: \"background.default\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            placeholder: \"Type a message\",\n            variant: \"outlined\",\n            value: input,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            size: \"large\",\n            color: \"primary\",\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 38\n            }, this),\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatUI, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = ChatUI;\nconst Message = ({\n  message\n}) => {\n  const isBot = message.sender === \"bot\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: isBot ? \"flex-start\" : \"flex-end\",\n      mb: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        p: 2,\n        backgroundColor: isBot ? \"primary.light\" : \"secondary.light\",\n        borderRadius: isBot ? \"20px 20px 20px 5px\" : \"20px 20px 5px 20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Message;\nexport default ChatUI;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatUI\");\n$RefreshReg$(_c2, \"Message\");","map":{"version":3,"names":["React","Box","TextField","Button","Typography","Grid","Paper","SendIcon","jsxDEV","_jsxDEV","messages","id","text","sender","ChatUI","_s","input","setInput","useState","handleSend","trim","console","log","handleInputChange","event","target","value","sx","height","display","flexDirection","bgcolor","children","flexGrow","overflow","p","map","message","Message","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","container","spacing","item","xs","fullWidth","size","placeholder","variant","onChange","color","endIcon","onClick","_c","isBot","justifyContent","mb","borderRadius","_c2","$RefreshReg$"],"sources":["/Users/aleimberg/Study/dapp_chat_material_ui/src/components/ChatUI.jsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n    Box,\n    TextField,\n    Button,\n    Typography,\n    Grid,\n    Paper,\n} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\n\nconst messages = [\n    { id: 1, text: \"Hi there!\", sender: \"bot\" },\n    { id: 2, text: \"Hello!\", sender: \"user\" },\n    { id: 3, text: \"How can I assist you today?\", sender: \"bot\" },\n    ];\n\nconst ChatUI = () => {\n    const [input, setInput] = React.useState(\"\");\n\n    const handleSend = () => {\n        if (input.trim() !== \"\") {\n            console.log(input);\n            setInput(\"\");\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setInput(event.target.value);\n    };\n\n    return (\n        <Box\n            sx={{\n            height: \"50vh\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                bgcolor: \"grey.200\",\n            }}\n            >\n            <Box sx={{ flexGrow: 1, overflow: \"auto\", p: 2 }}>\n                {messages.map((message) => (\n                    <Message key={message.id} message={message} />\n                    ))}\n            </Box>\n            <Box sx={{ p: 2, backgroundColor: \"background.default\" }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={10}>\n                        <TextField\n                            fullWidth\n                            size=\"small\"\n                            placeholder=\"Type a message\"\n                            variant=\"outlined\"\n                            value={input}\n                            onChange={handleInputChange}\n                        />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button\n                            fullWidth\n                            size=\"large\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            endIcon={<SendIcon />}\n                            onClick={handleSend}\n                            >\n                            Send\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Box>\n        );\n};\n\nconst Message = ({ message }) => {\n    const isBot = message.sender === \"bot\";\n\n    return (\n        <Box\n            sx={{\n            display: \"flex\",\n                justifyContent: isBot ? \"flex-start\" : \"flex-end\",\n                mb: 2,\n            }}\n            >\n            <Paper\n                variant=\"outlined\"\n                sx={{\n                p: 2,\n                    backgroundColor: isBot ? \"primary.light\" : \"secondary.light\",\n                    borderRadius: isBot ? \"20px 20px 20px 5px\" : \"20px 20px 5px 20px\",\n                }}\n                >\n                <Typography variant=\"body1\">{message.text}</Typography>\n            </Paper>\n        </Box>\n        );\n};\n\nexport default ChatUI;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}